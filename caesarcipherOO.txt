import edu.duke.*;
public class CaesarCipherTwo {
    private String alphabet, shiftedAlphabet1, shiftedAlphabet2;
    private int key1, key2;
    CaesarCipherTwo(int key1, int key2){
        this.key1 = key1;
        this.key2 = key2;
        alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        shiftedAlphabet1 = alphabet.substring(key1) + alphabet.substring(0,key1);  
        shiftedAlphabet2 = alphabet.substring(key2) + alphabet.substring(0,key2);
    }
    
    public String encrypt(String input){
        StringBuilder sb = new StringBuilder(input);
        for(int i = 0; i < sb.length() ; i++){
            char currChar = sb.charAt(i);
            int idx = alphabet.indexOf(Character.toUpperCase(currChar));
            if(idx != -1){
                char newChar;              
                if(i % 2 == 0){
                    newChar = shiftedAlphabet1.charAt(idx);                    
                }
                else{
                    newChar = shiftedAlphabet2.charAt(idx);
                }
                if(Character.isLowerCase(sb.charAt(i))){
                    sb.setCharAt(i, Character.toLowerCase(newChar));
                }
                else{
                    sb.setCharAt(i, newChar);
                }
            }
        }
        return sb.toString();
    }
    
    public String decrypt(String input){  
        CaesarCipherTwo cct = new CaesarCipherTwo(26 - key1, 26 - key2);
        return cct.encrypt(input);
    }

    void simpletests(){
        FileResource fr = new FileResource();
        String message = fr.asString();
        int key1 = 17, key2 = 3;
        System.out.println("Actual message is:\n" + message); 
        String encrypted = encrypt(message);        
        System.out.println("\nEncrypted message with keys " + key1 + " and " + key2 + " is:\n" + encrypted);
        String decrypted = decrypt(encrypted);
        System.out.println("Decrypted message is:\n" + decrypted);
    }
}